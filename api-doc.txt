### Authentication ### 
POST /auth/register   register a new user
REQUEST BODY
{
  firstName*        string    user first name
  lastName*         string    user last name
  emailOrMobile*    string    email address or mobile number
  password*         string    password must contain only alphabet
  confirmPassword*  string    confirm password must match a password
}
RESPONSE
201
  {
    accessToken     string    user token
    newUser         object    user object without password
  }
400
  {
    message         string    client error message
  }
500
  {
    message         string    server error message
  }

POST /auth/login    login
REQUEST BODY
{
  emailOrMobile*    string    email address or mobile number
  password*         string    user password
}
RESPONSE
200
  {
    accessToken     string    user token
    user            object    user object without password
  }
400
  {
    message         string    client error message
  }
500

  {
    message         string    server error message
  }

GET /auth/me         get authenticated user data
HEADER
  AUTHORIZATION      Bearer [JWT]
RESPONSE
200  { user: { id, firstName, lastName, email, mobile, profileImage, coverImage, createdAt, updatedAt } }
401  { message: 'unauthenticated' }
500  { message: 'internal server errro' }

PATCH /users       update user profile
HEADER
  AUTHORIZATION           Bearer [JWT]
REQUEST BODY              multipart/form-data
  profileImage?           user profile image
  coverImage?             user cover image
RESPOSNSE
  200 { profileImage: 'http://', coverImage: 'https://' }
  400 { message: 'unexpected field' }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }

GET /users/:targetUserId/profile
HEADER
  AUTHORIZATION           Bearer [JWT]
RESPOSNSE
  200 { profileUser, profileUserFriends, relationshipToAuthUser }
  400 { message: 'unexpected field' }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }

POST      /relationships/users/:targetUserId                  request new friend
PATCH     /relationships/users/:targetUserId/confirm          accept request     
PATCH     /relationships/users/:targetUserId/reject           reject request
PATCH     /relationships/users/:targetUserId/cancel           cancel request
PATCH     /relationships/users/:targetUserId/unfriend         unfriend
HEADER
  AUTHORIZATION   Bearer [JWT]
RESPOSNSE
  200 { message: 'success request' }
  400 { message: 'invalid relationships between two user' }
  401 { message: 'unauthenticated' }
  403 { message: 'cannot accept your request' }
  500 { message: 'internal server error' }

POST /posts         Create a new post
HEADER
  AUTHORIZATION     Bearer [JWT]
REQUEST BODY        multipart/form-data
  title?             string (at least one of title or image)
  image?             blob (at least one of title or image)
RESPONSE
  201 { post: new post object }
  400 { message: 'invalid input' }
  401 { message: 'unauthenticated' }
  500 { message: 'internal server error' }